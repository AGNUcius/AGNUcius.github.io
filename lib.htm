<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">

<head>
  <title>lib  </title>
  <link href=".code/preferred.css" rel="stylesheet" type="text/css"/>
</head>

<body>
<p class='header'>
<a href="_home.htm">Home</a> | <a href="_faq.htm">FAQ</a> | <a href="_thesis.htm">Thesis</a> | <a href="_diary.htm">Diary</a> | <a href="_projects.htm">Projects</a> | <a href="resume.htm">Resume</a> | <a href="_todo.htm">Todo</a> | <a href="_index.htm">Index</a> |<p>
<p class='main'><span class="rel">Related:</span> code, <a href="compile.htm">compile</a>, programming<br/>
<br/>
<a href="lib.htm">Lib</a>er: A God associated with Bacchus and Dionysus<br/>
<a href="lib.htm">Lib</a>erate: <a href="free.htm">Free</a><br/>
<a href="lib.htm">Lib</a>eral: plenty, <a href="left.htm">Left</a><br/>
<a href="lib.htm">Lib</a>er Al: Mason <small>(Alister Crowley)</small><br/>
<a href="lib.htm">Lib</a>erty: <a href="free.htm">Free</a>dom<br/>
Neoliberal: WTO<br/>
<a href="lib.htm">Lib</a>rary: books<br/>
<a href="lib.htm">Lib</a>rary<small>(<a href="compu.htm">compu</a>ter)</small>: /<a href="lib.htm">lib</a>, /usr/<a href="lib.htm">lib</a>, /usr/bin/ldd<br/>
<a href="lib.htm">Lib</a>re: <a href="free.htm">free</a><br/>
<br/>
<br/>
<br/>
<span class="h2">==<a href="compu.htm">Compu</a>ter</span><br/>
<a class="ext" href="http://www.exactcode.de/site/open_source/embeddedstl">http://www.exactcode.de/site/open_source/embeddedstl</a><br/>
<br/>
LEMON is an open <a href="sourc.htm">sourc</a>e <a href="lib.htm">lib</a>rary written in C++. It provides easy-to-<a href="use.htm">use</a> implementations of common data structures and algorithms in the area of optimization and helps implementing new ones. The main focus is on graphs and graph algorithms, thus it is especially suitable for solving design and optimization problems of telecommunication <a href="net.htm">net</a><a href="work.htm">work</a>s. To achieve wide usability its data structures and algorithms provide generic interfaces.<br/>
<br/>
<a class="ext" href="http://Ultima.sf.net">Ultima.sf.net</a> <span class="quot2">>>Lightweight, cross-platform, <a href="obj.htm">obj</a>ect-oriented <a href="lib.htm">lib</a>rary for C++ wich helps you to operate with <a href="file.htm">file</a>s, directories, processes, <a href="thread.htm">thread</a>s, <a href="sock.htm">sock</a>ets etc.</span><br/>
<br/>
<a class="ext" href="http://CoreLibrary.sf.net">CoreLibrary.sf.net</a> <span class="quot2">>>The CoreLibrary is a multiplatform <a href="obj.htm">obj</a>ect <a href="lib.htm">lib</a>rary for C++ <small>(Linux, Win32, <a href="mac.htm">Mac</a><a href="osx.htm">OSX</a>, PocketPC)</small>.It provides many of the common <a href="obj.htm">obj</a>ects found in Java <small>(Strings, <a href="thread.htm">Thread</a>s, Collections, etc.)</small> and has the ability to send <a href="obj.htm">obj</a>ects across the <a href="net.htm">net</a><a href="work.htm">work</a> like CORBA.</span><br/>
<br/>
<a class="ext" href="http://PACC.sf.net">PACC.sf.net</a> <span class="quot2">>>PACC is a collection of Portable Agile C++ Classes. It includes math, <a href="sock.htm">sock</a>et, <a href="thread.htm">thread</a>ing, SVG, and XML classes. They run on both Unix and Windows platforms, and have been tested and <a href="use.htm">use</a>d under Linux, <a href="mac.htm">Mac</a><a href="osx.htm">OSX</a>, and Windows 2000/XP.</span><br/>
<br/>
<a class="ext" href="http://Closure.GoogleCode.com">Closure.GoogleCode.com</a> <span class="quot2">>>The Closure <a href="lib.htm">Lib</a>rary is a broad, well-tested, <a href="mod.htm">mod</a>ular, and cross-<a href="brows.htm">brows</a>er <a href="javascript.htm">JavaScript</a> <a href="lib.htm">lib</a>rary. You can pull just what you need from a large set of reusable UI widgets and controls, and from lower-level utilities for DOM manipulation, server communication, animation, data structures, unit testing, rich-text <a href="edit.htm">edit</a>ing, and more.</span><br/>
<br/>
<a class="ext" href="http://Open-Network.GoogleCode.com">Open-Network.GoogleCode.com</a> <span class="quot2">>>OpenNet<a href="work.htm">work</a> is designed to be a straightforward and clean API for <a href="net.htm">net</a><a href="work.htm">work</a> programming. Its completely interface-based, what means that you can replace everything with <a href="own.htm">own</a> implementations. The big advantage of OpenNet<a href="work.htm">work</a> is that it is released under the zlib license what means that you have basically the right to do whatever you want with it AND it is frequently updated and improved.</span><br/>
<br/>
<a class="ext" href="http://libUTL.sf.net">libUTL.sf.net</a> <span class="quot2">>><a href="lib.htm">lib</a>UTL++ is a cross-platform C++ class <a href="lib.htm">lib</a>rary that provides a set of commonly <a href="use.htm">use</a>ful functionality and abstractions to exp<a href="edit.htm">edit</a>e C++ application development.</span><br/>
<br/>
<a class="ext" href="http://WWW710.Univ-Lyon1.fr/~exco/ZMW">WWW710.Univ-Lyon1.fr/~exco/ZMW</a> <span class="quot2">>>Zero Memory Widget&nbsp;&nbsp;&nbsp;&nbsp;Widget <a href="lib.htm">lib</a>raries have now been developed and <a href="use.htm">use</a>d for years. In all these <a href="lib.htm">lib</a>raries, widget instances require <a href="compu.htm">compu</a>ter memory. But this memory is not <a href="real.htm">real</a>ly required, We have implemented a widget <a href="lib.htm">lib</a>rary to prove that it is possible to <a href="use.htm">use</a> zero bytes of memory per widget. In such a <a href="lib.htm">lib</a>rary, there is no widget reference, so widget programming is easier even in a low level language such as C. Programs are more robust because they do not <a href="use.htm">use</a> pointers, <a href="mak.htm">mak</a>e no memory management and do not translate data between application and widget. To set the attributes of a widget, it is not possible to <a href="use.htm">use</a> the widget's pointer so a <a href="curr.htm">curr</a>ent <a href="stat.htm">stat</a>e is <a href="use.htm">use</a>d as in OpenGL. Most classic widgets were integrated into the <a href="lib.htm">lib</a>rary, and it is possible to integrate widgets of all kinds without any problem.</span><br/>
<br/>
<a class="ext" href="http://Public.MSLI.com/lcs/muscle">Public.MSLI.com/lcs/muscle</a> MUSCLE <small>(Multi <a href="user.htm">User</a> Server Client Linking Environment)</small> is an N-way messaging server and <a href="net.htm">net</a><a href="work.htm">work</a>ing API. It includes client-side <a href="net.htm">net</a><a href="work.htm">work</a>ing APIs for various languages, including C, C++, C#, Delphi, Java, and Python. MUSCLE lets programs communicate over a <a href="net.htm">net</a><a href="work.htm">work</a> via streams of serialized Message <a href="obj.htm">obj</a>ects. The included server program <small>("muscled")</small> lets its clients message each other and <a href="stor.htm">stor</a>e information in its server-side hierarchical database. The database supports flexible queries via hierarchical wildcarding, and "<a href="liv.htm">liv</a>e" updates via a subscription mechanism.<br/>
<br/>
<a class="ext" href="http://libjingle.GoogleCode.com">libjingle.GoogleCode.com</a> <span class="quot2">>><a href="lib.htm">lib</a>jingle is a collection of open-<a href="sourc.htm">sourc</a>e C++ code and sample applications that enables you to <a href="buil.htm">buil</a>d a peer-to-peer application. The code handles creating a <a href="net.htm">net</a><a href="work.htm">work</a> connection <small>(through NAT and firewall devices, relay servers, and proxies)</small>, negotiating session details <small>(codecs, formats, etc.)</small>, and exchanging data. It also provides helper tasks such as <a href="pars.htm">pars</a>ing XML, and handling <a href="net.htm">net</a><a href="work.htm">work</a> proxies.</span><br/>
<br/>
<a class="ext" href="http://OpenControls.sf.net">OpenControls.sf.net</a> <span class="quot2">>>OpenControls is a <a href="lib.htm">lib</a>rary of Windows controls similar to Common Controls. It contains "In Place ComboBox", "<a href="proper.htm">Proper</a>ty Box" and "<a href="imag.htm">Imag</a>e Button". It is available for both 32 and 64 bit platform, suports ANSI and UNICODE and supports XP Visual Styles.</span><br/>
<br/>
<a class="ext" href="http://www.CodeProject.com/KB/winsdk/framework.aspx?fid=159070">www.CodeProject.com/KB/winsdk/framework.aspx?fid=159070</a> <span class="quot2">>>Win32++ has been designed to <a href="mak.htm">mak</a>e life a little easier for those learning to <a href="use.htm">use</a> C++ to program using the Win32 API directly. It is a simple alternative to MFC, but has the added advantage of running on a wide range of <a href="free.htm">free</a> <a href="compile.htm">compile</a>rs. Win32++ doesn't attempt to hide the Win32 API. On the contrary, it exposes the Win32 API, allowing it to be more easily learnt and understood. You have all the <a href="sourc.htm">sourc</a>e code right there in front of you, so there is no mystery about how the Frame<a href="work.htm">work</a> actually <a href="work.htm">work</a>s. The code has been designed to run on a wide range of C++ <a href="compile.htm">compile</a>rs, including those from Microsoft, Bor<a href="land.htm">land</a> and the <a href="free.htm">free</a> <a href="mingw.htm">MinGW</a> <a href="compile.htm">compile</a>r from <a href="gnu.htm">GNU</a>. Win32++ supports all Win32 <a href="operating system.htm">operating system</a>s, from Windows 95 through to Windows XP and Vista. Win32++ also directly supports the Windows CE <a href="operating system.htm">operating system</a>. Windows CE is the <a href="operating system.htm">operating system</a> which runs on the various Pocket PCs, Smartphones, as well as industrial devices and embedded systems. The Windows CE API is a subset of the Win32 API. It also includes some new common controls tailored for the smaller <a href="compu.htm">compu</a>ters and devices it runs on. Win32++ brings an <a href="obj.htm">obj</a>ect oriented approach to programming directly with the Win32 API. Each window created is a C++ class <a href="obj.htm">obj</a>ect capable of having its <a href="own.htm">own</a> window procedure for routing messages.</span><br/>
<br/>
<a class="ext" href="http://GNUTelephony.org/index.php/UCommon">GNUTelephony.org/index.php/UCommon</a> <span class="quot2">>>UCommon is meant as a very light-weight C++ <a href="lib.htm">lib</a>rary to facilitate using C++ design patterns even for very deeply embedded applications, such as for systems using uclibc along with posix <a href="thread.htm">thread</a>ing support. For this reason, UCommon disables language features that consume memory or introduce runtime overhead, such as rtti and exception handling, and assumes one will mostly be linking applications with other pure C based <a href="lib.htm">lib</a>raries rather than using the overhead of the standard C++ <a href="lib.htm">lib</a>rary and other similar class frame<a href="work.htm">work</a>s.</span><br/>
<br/>
<a class="ext" href="http://OpenLibraries.org">OpenLibraries.org</a> <span class="quot2">>>The Openlibraries are a powerful, cross-platform set of C++ <a href="lib.htm">lib</a>raries that provide developers with <a href="key.htm">key</a> components for the development of rich media applications. The Openlibraries are the first of its kind and represent a crucial step forward in the development of open <a href="sourc.htm">sourc</a>e tools for creating digital content. Its <a href="lib.htm">lib</a>rary <a href="mod.htm">mod</a>ules can be <a href="use.htm">use</a>d to develop applications for such things as <a href="edit.htm">edit</a>ing, compositing, media players, encoders and <a href="imag.htm">imag</a>e processing.</span><br/>
<br/>
<a class="ext" href="http://rulib.sf.net">rulib.sf.net</a> <span class="quot2">>>A C++ <a href="lib.htm">lib</a>rary for the Windows platform containing classes for MIME, video capture, <a href="sock.htm">sock</a>et, Windows registry, <a href="file.htm">file</a>s, <a href="imag.htm">imag</a>es, and other basic purposes.</span><br/>
<br/>
<a class="ext" href="http://DynObj.sf.net">DynObj.sf.net</a> <span class="quot2">>>DynObj is a C/C++ <a href="lib.htm">lib</a>rary for cross <a href="compile.htm">compile</a>r plugin <a href="lib.htm">lib</a>raries. It enables exposing and sharing run-time type information for C++ classes. This allows for loading binary plugins, and interacting with them in type safe ways:</span><br/>
<br/>
<a class="ext" href="http://Win32-Framwork.sf.net">Win32-Framwork.sf.net</a> <span class="quot2">>>Win32++ is a C++ <a href="lib.htm">lib</a>rary <a href="use.htm">use</a>d to <a href="buil.htm">buil</a>d windows applications. It supports most <a href="compile.htm">compile</a>rs including Visual 2008 Express. It is an <a href="ide.htm">ide</a>al <a href="start.htm">start</a>ing point for anyone learning to program for windows, but also caters for the needs of professional developers.</span><br/>
<br/>
<a class="ext" href="http://dClib.sf.net">dClib.sf.net</a> <span class="quot2">>>Welcome to the dlib C++ <a href="lib.htm">lib</a>rary's homepage. It is a <a href="mod.htm">mod</a>ern C++ <a href="lib.htm">lib</a>rary with a focus on portability and program correctness. It strives to be easy to <a href="use.htm">use</a> right and <a href="hard.htm">hard</a> to <a href="use.htm">use</a> wrong. Thus, it comes with extensive documentation and thorough debugging <a href="mod.htm">mod</a>es.</span><br/>
<br/>
<a class="ext" href="http://ibiblio.org">ibiblio.org</a> <span class="quot2">>>the public's <a href="lib.htm">lib</a>rary and digital archive</span><br/>
<br/>
<a class="ext" href="http://LibriVox.org">LibriVox.org</a> <span class="quot2">>>Acoustical <a href="lib.htm">lib</a>eration of books in the public domain</span><br/>
<br/>
<a class="ext" href="http://OpenLibrary.org">OpenLibrary.org</a><br/>
<br/>
<a class="ext" href="http://uClibc.org">uClibc.org</a> <span class="quot2">>>uClibc <small>(aka µClibc/pronounced yew-see-<a href="lib.htm">lib</a>-see)</small> is a C <a href="lib.htm">lib</a>rary for developing embedded Linux systems. It is much smaller than the <a href="gnu.htm">GNU</a> C <a href="lib.htm">Lib</a>rary, but nearly all applications supported by glibc also <a href="work.htm">work</a> perfectly with uClibc. Porting applications from glibc to uClibc typically involves just recompiling the <a href="sourc.htm">sourc</a>e code. uClibc even supports shared <a href="lib.htm">lib</a>raries and <a href="thread.htm">thread</a>ing. It <a href="curr.htm">curr</a>ently runs on standard Linux and MMU-less <small>(also <a href="know.htm">know</a>n as µClinux)</small> systems with support for alpha, amd64, ARM, Blackfin, cris, h8300, hppa, i386, i960, ia64, m68k, mips/mipsel, PowerPC, SH, SPARC, and v850 processors.</span><br/>
<br/>
<a class="ext" href="http://Grace.OpenPanel.com">Grace.OpenPanel.com</a> <span class="quot">"'Lots of effort has been put, through various projects, into creating systems and <a href="lib.htm">lib</a>raries that hide some of the more ugly <a href="part.htm">part</a>s and ease programming. Grace is one of those attempts. It is a project that has grown over a couple of years to introduce, through a combination of <a href="use.htm">use</a>ful classes and clever <a href="mac.htm">mac</a>ros, clear and easy ways to perform a lot of <a href="compu.htm">compu</a>ting tasks in C++.<br/>
<br/>
This project is not for C++ purists. Code written for Grace will look more like Python or PHP than your run-of-the-mill C++ program. What it delivers is code that you can read <a href="back.htm">back</a> the next morning -- it will <a href="mak.htm">mak</a>e sense, even if it touches nasty subjects like <a href="thread.htm">thread</a>ing and text munging.<br/>
<br/>
This project is also not for those people looking for ever-increasing thrills that find them in esoteric programming concepts that allow them to <a href="use.htm">use</a> yet more clever ways to express mundane operations in increasingly illegible runes that, while looking <a href="real.htm">real</a>ly clever and perhaps sometimes even <a href="mak.htm">mak</a>ing sense for <a href="part.htm">part</a>icular operations, are more likely to <a href="mak.htm">mak</a>e your head spin. Grace is for the rest of us that prefer, for now, programming to be a bit more straight forward in the context of, well, getting things done.'"</span><br/>
<br/>
<a class="ext" href="http://Sources.RedHat.com/newlib">Sources.RedHat.com/newlib</a> <span class="quot2">>>Newlib is a C <a href="lib.htm">lib</a>rary intended for <a href="use.htm">use</a> on embedded systems. It is a conglomeration of several <a href="lib.htm">lib</a>rary <a href="part.htm">part</a>s, all under <a href="free.htm">free</a> software licenses that <a href="mak.htm">mak</a>e them easily usable on embedded <a href="produc.htm">produc</a>ts.</p>
<p class='footer'>
 Page generated from <a href=".text/lib">lib</a> by <a href=".code/etym.el">etym</a>.</p>
</body>
</html>
