<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">

<head>
  <title>compile  </title>
  <link href=".code/preferred.css" rel="stylesheet" type="text/css"/>
</head>

<body>
<p class='header'>
<a href="_home.htm">Home</a> | <a href="_faq.htm">FAQ</a> | <a href="_thesis.htm">Thesis</a> | <a href="_diary.htm">Diary</a> | <a href="_projects.htm">Projects</a> | <a href="resume.htm">Resume</a> | <a href="_todo.htm">Todo</a> | <a href="_index.htm">Index</a> |<p>
<p class='main'><span class="rel">Related:</span> <a href="buil.htm">buil</a>d, <a href="compu.htm">compu</a>ter, GCC, <a href="ide.htm">IDE</a>, interpret, <a href="lib.htm">lib</a>, script<br/>
<br/>
<a class="ext" href="http://Compilr.com">Compilr.com</a> <span class="quot2">>>Compilr is a completely online <a href="ide.htm">IDE</a> &amp; <a href="compile.htm">compile</a>r for C#, PHP, C, C++, Ruby, VB and Java.</span><br/>
<br/>
<a class="ext" href="http://CTuning.org">CTuning.org</a> <span class="quot2">>><a href="free.htm">free</a>, open <a href="sourc.htm">sourc</a>e, <a href="collab.htm">collab</a>orative repository and tools for program and architecture characterization and optimization.</span><br/>
<br/>
<a class="ext" href="http://Code.Google.com/closure/compiler">Code.Google.com/closure/compiler</a> <span class="quot2">>>The Closure <a href="compile.htm">Compile</a>r is a tool for <a href="mak.htm">mak</a>ing <a href="javascript.htm">JavaScript</a> download and run faster. It is a true <a href="compile.htm">compile</a>r for <a href="javascript.htm">JavaScript</a>. Instead of compiling from a <a href="sourc.htm">sourc</a>e language to <a href="mac.htm">mac</a>hine code, it <a href="compile.htm">compile</a>s from <a href="javascript.htm">JavaScript</a> to better <a href="javascript.htm">JavaScript</a>. It <a href="pars.htm">pars</a>es your <a href="javascript.htm">JavaScript</a>, analyzes it, removes dead code and rewrites and minimizes what's <a href="left.htm">left</a>. It also checks syntax, variable references, and types, and warns about common <a href="javascript.htm">JavaScript</a> pitfalls.</span><br/>
<br/>
<a class="ext" href="http://Buildroot.uClibc.org">Buildroot.uClibc.org</a> <span class="quot2">>><a href="buil.htm">Buil</a>droot is a set of <a href="mak.htm">Mak</a>e<a href="file.htm">file</a>s and patches that <a href="mak.htm">mak</a>es it easy to generate a cross-compilation toolchain and root <a href="file.htm">file</a>system for your target Linux system using the uClibc C <a href="lib.htm">lib</a>rary. <a href="buil.htm">Buil</a>droot is <a href="use.htm">use</a>ful mainly for people <a href="work.htm">work</a>ing with small or embedded systems. Embedded systems often <a href="use.htm">use</a> processors that are not the regular x86 processors everyone is <a href="use.htm">use</a>d to using on their PC. It can be PowerPC processors, MIPS processors, ARM processors, etc. And to be extra safe, you do not need to be root to <a href="buil.htm">buil</a>d or run <a href="buil.htm">Buil</a>droot.</span><br/>
<br/>
<a class="ext" href="http://Openembedded.org">Openembedded.org</a> <span class="quot2">>>Welcome to Openembedded, your best-in-class cross-<a href="compile.htm">compile</a> environment. Openembedded allows developers to create a complete Linux Distribution for embedded systems.</span><br/>
<br/>
<a class="ext" href="http://Scratchbox.org">Scratchbox.org</a> <span class="quot2">>>Scratchbox is a cross-compilation toolkit designed to <a href="mak.htm">mak</a>e embedded Linux application development easier. It also provides a full set of tools to integrate and cross-<a href="compile.htm">compile</a> an entire Linux distribution. To find out what it can do, take a look at some of the documentation.</span><br/>
<br/>
<a class="ext" href="http://CS.Virginia.edu/~lcc-win32">CS.Virginia.edu/~lcc-win32</a> <span class="quot2">>>lcc-win32: A <a href="compile.htm">Compile</a>r system for windows by Jacob Navia&nbsp;&nbsp;&nbsp;&nbsp;based on the original screenplay of Dave Hanson and Chris Fraser: A portable C <a href="compile.htm">compile</a>r</span><br/>
<br/>
<a class="ext" href="http://Rano.org/bcompiler.html">Rano.org/bcompiler.html</a> <span class="quot2">>><a href="boot.htm">Boot</a>strapping a simple <a href="compile.htm">compile</a>r from nothing&nbsp;&nbsp;&nbsp;&nbsp;This document describes how I implemented a tiny <a href="compile.htm">compile</a>r for a toy programming language somewhat reminiscent of C and Forth. The funny bit is that I implemented the <a href="compile.htm">compile</a>r in the language itself without directly using any previously existing software. So I <a href="start.htm">start</a>ed by writing raw <a href="mac.htm">mac</a>hine code in <a href="hex.htm">hex</a>adecimal and then, through a series of <a href="boot.htm">boot</a>strapping steps, gradually made programming easier for myself while implementing better and better "languages".</span><br/>
<br/>
<a class="ext" href="http://StrategoXT.org">StrategoXT.org</a> <span class="quot2">>>Stratego/XT is a language and toolset for program transformation. The Stratego language provides rewrite rules for expressing basic transformations, programmable rewriting strategies for controlling the application of rules, concrete syntax for expressing the patterns of rules in the syntax of the <a href="obj.htm">obj</a>ect language, and dynamic rewrite rules for expressing context-sensitive transformations, thus supporting the development of transformation components at a high level of abstraction.</span><br/>
<br/>
<a class="ext" href="http://Boomerang.sf.net">Boomerang.sf.net</a> <span class="quot2">>>A general, open <a href="sourc.htm">sourc</a>e, retargetable de<a href="compile.htm">compile</a>r of <a href="mac.htm">mac</a>hine code programs</span><br/>
<br/>
<a class="ext" href="http://CS.MU.OZ.au/research/mercury">CS.MU.OZ.au/research/mercury</a><br/>
<br/>
<a class="ext" href="http://RADAsm.VisualAssembler.com">RADAsm.VisualAssembler.com</a><br/>
<br/>
<a class="ext" href="http://SmallBasic.sf.net">SmallBasic.sf.net</a> <span class="quot2">>>The SmallBASIC project aims to provide a full featured and easy to <a href="use.htm">use</a> scripting language suitable for non serious programming on any <a href="compu.htm">compu</a>ting platform.</span><br/>
<br/>
<a class="ext" href="http://GooGooGaGa.org">GooGooGaGa.org</a> <span class="quot2">>>GOO is a new type-based prefix syntaxed language that is simple, powerful and extensible. GOO is an acronym for Generic <a href="obj.htm">Obj</a>ect Orientator. GOO supercedes preproto.</span><br/>
<br/>
<a class="ext" href="http://ECLS.sf.net">ECLS.sf.net</a> <span class="quot2">>>ECL is an implementation of the Common Lisp language as defined by the ANSI X3J13 specification. The most relevant features:</span><br/>
<br/>
<a class="ext" href="http://elastiCWorld.org">elastiCWorld.org</a> <span class="quot2">>>elastiC is a portable high-level <a href="obj.htm">obj</a>ect-oriented interpreted language with a C like syntax.</span><br/>
<br/>
<a class="ext" href="http://Fresh.FlatAssembler.net">Fresh.FlatAssembler.net</a> <span class="quot2">>>Welcome to the site of flat assembler! This is a place dedicated to assembly language programming for x86 and x86-64 systems and contains many re<a href="sourc.htm">sourc</a>es for both beginners and advanced assembly programmers. This site is constantly being improved, and hopefully you'll find here some <a href="use.htm">use</a>ful materials, no matter whether you are trying to learn the assembly language, or just are looking for the solution for some <a href="part.htm">part</a>icular problem.</span><br/>
<br/>
<a class="ext" href="http://Agner.org/assem">Agner.org/assem</a> <span class="quot2">>>This series of five manuals describes everything you need to <a href="know.htm">know</a> about optimizing code for Intel and AMD microprocessors, including optimization advices for C++ and assembly language, details about the microarchitecture and instruction timings of Intel and AMD processors, and details about <a href="diff.htm">diff</a>e<a href="rent.htm">rent</a> <a href="compile.htm">compile</a>rs and calling conventions.</span><br/>
<br/>
<a class="ext" href="http://SuperTech.LCS.MIT.edu/cilk">SuperTech.LCS.MIT.edu/cilk</a><br/>
<br/>
<a class="ext" href="http://DigitalMars.com/d">DigitalMars.com/d</a> D programming language<br/>
<br/>
<a class="ext" href="http://DistCC.samba.org">DistCC.samba.org</a> "a fast, <a href="free.htm">free</a> distributed C/C++ <a href="compile.htm">compile</a>r"<br/>
<br/>
<a class="ext" href="http://SDCC.sf.net">SDCC.sf.net</a> "Small Device C <a href="compile.htm">Compile</a>r"<br/>
<br/>
<a class="ext" href="http://nescc.sf.net">nescc.sf.net</a> "A Programming Language for Deeply <a href="net.htm">Net</a><a href="work.htm">work</a>ed Systems"<br/>
<br/>
<a class="ext" href="http://ccache.samba.org">ccache.samba.org</a><br/>
<br/>
<a class="ext" href="http://GNU.org/software/lightning">GNU.org/software/lightning</a> <span class="quot2">>><a href="gnu.htm">GNU</a> lightning is a <a href="lib.htm">lib</a>rary that generates assembly language code at run-time; it is very fast, <a href="mak.htm">mak</a>ing it <a href="ide.htm">ide</a>al for Just-In-Time <a href="compile.htm">compile</a>rs, and it abstracts over the target CPU, as it exposes to the clients a standardized RISC instruction set inspired by the MIPS and SPARC chips.</span><br/>
<br/>
<a class="ext" href="http://Info.UNI-Karlsruhe.de/software/libfirm">Info.UNI-Karlsruhe.de/software/libfirm</a> <span class="quot2">>><a href="lib.htm">lib</a>Firm is a <a href="lib.htm">lib</a>rary that provides an intermediate representation and optimisations for <a href="compile.htm">compile</a>rs. Programs are represented in a graph based SSA form.</span><br/>
<br/>
<a class="ext" href="http://DevKitPro.org">DevKitPro.org</a> <span class="quot2">>>This site is home to the toolchains of choice for homebrew <a href="game.htm">game</a> development, <a href="curr.htm">curr</a>ently available for <a href="game.htm">Game</a>Boy Advance, GP32, Play<a href="stat.htm">stat</a>ion Portable and <a href="game.htm">Game</a>Cube. More platforms will be added as time permits.</span><br/>
<br/>
<br/>
<a class="ext" href="http://Sandroid.org/imcross">Sandroid.org/imcross</a> <span class="quot2">>>I'm Cross! <small>(<a href="install.htm">Install</a> Microsoft and <a href="mac.htm">Mac</a> OS X Cross-<a href="compile.htm">Compile</a>rs)</small> <a href="install.htm">Install</a>ation of Linux-hosted Cross-<a href="compile.htm">Compile</a>rs and <a href="lib.htm">Lib</a>raries targeting Microsoft Windows and <a href="mac.htm">Mac</a> OS X</span><br/>
<br/>
<a class="ext" href="http://Kegel.com/crosstool">Kegel.com/crosstool</a> <span class="quot2">>><a href="buil.htm">Buil</a>ding and Testing gcc/glibc cross toolchains</span><br/>
<br/>
<a class="ext" href="http://Ymorin.Is-A-Geek.org/dokuwiki/projects/crosstool">Ymorin.Is-A-Geek.org/dokuwiki/projects/crosstool</a> <span class="quot2">>>crosstool-NG aims at <a href="buil.htm">buil</a>ding toolchains. Toolchains are an essential component in a software development project. It will <a href="compile.htm">compile</a>, assemble and link the code that is being developed. Some pieces of the toolchain will eventually end up in the resulting binary/ies: <a href="stat.htm">stat</a>ic <a href="lib.htm">lib</a>raries are but an example.</span><br/>
<br/>
<a class="ext" href="http://LLVM.org">LLVM.org</a> <span class="quot2">>>The Low Level <a href="virt.htm">Virt</a>ual <a href="mac.htm">Mac</a>hine <a href="compile.htm">Compile</a>r Infrastructure</span><br/>
<br/>
<a class="ext" href="http://Eli-Project.sf.net">Eli-Project.sf.net</a> <span class="quot2">>>We have combined a variety of standard tools that implement powerful <a href="compile.htm">compile</a>r construction strategies into a domain-specific programming environment called Eli. Using this environment, one can automatically generate complete language implementations from application-oriented specifications. The implementations might be interpretive, using the constructs of the <a href="sourc.htm">sourc</a>e language to invoke operations of an existing system, or might involve translation into an arbitrary target language.</span><br/>
</p>
<p class='footer'>
 Page generated from <a href=".text/compile">compile</a> by <a href=".code/etym.el">etym</a>.</p>
</body>
</html>
