<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">

<head>
  <title>pars  </title>
  <link href=".code/preferred.css" rel="stylesheet" type="text/css"/>
</head>

<body>
<p class='header'>
<a href="_home.htm">Home</a> | <a href="_faq.htm">FAQ</a> | <a href="_thesis.htm">Thesis</a> | <a href="_diary.htm">Diary</a> | <a href="_projects.htm">Projects</a> | <a href="resume.htm">Resume</a> | <a href="_todo.htm">Todo</a> | <a href="_index.htm">Index</a> |<p>
<p class='main'><span class="rel">Related:</span> Bison, <a href="compu.htm">compu</a>te, junction, lang, lex, tag, text, word, YACC<br/>
<br/>
<a class="ext" href="http://Wikipedia.org/wiki/Comparison_of_parser_generators">Wikipedia.org/wiki/Comparison_of_parser_generators</a><br/>
<br/>
<a class="ext" href="http://WWW.SSW.Uni-Linz.AC.at/Research/Projects/Coco">WWW.SSW.Uni-Linz.AC.at/Research/Projects/Coco</a> <span class="quot2">>>Coco/R is a <a href="compile.htm">compile</a>r generator, which takes an attributed grammar of a <a href="sourc.htm">sourc</a>e language and generates a scanner and a <a href="pars.htm">pars</a>er for this language. The scanner <a href="work.htm">work</a>s as a deterministic finite autom<a href="aton.htm">aton</a>. The <a href="pars.htm">pars</a>er <a href="use.htm">use</a>s recursive descent. LL<small>(1)</small> conflicts can be resolved by a multi-symbol lookahead or by semantic checks. Thus the class of accepted grammars is LL<small>(k)</small> for an arbitrary k.</span><br/>
<br/>
<a class="ext" href="http://CompLang.org/ragel">CompLang.org/ragel</a> <span class="quot2">>>Ragel <a href="compile.htm">compile</a>s executable finite <a href="stat.htm">stat</a>e <a href="mac.htm">mac</a>hines from regular languages. Ragel targets C, C++, <a href="obj.htm">Obj</a>ective-C, D, Java and Ruby. Ragel <a href="stat.htm">stat</a>e <a href="mac.htm">mac</a>hines can not only recognize byte sequences as regular expression <a href="mac.htm">mac</a>hines do, but can also execute code at arbitrary points in the recognition of a regular language. Code embedding is done using inline operators that do not disrupt the regular language syntax.</span><br/>
<br/>
<a class="ext" href="http://pegjs.majda.cz">http://pegjs.majda.cz</a> <span class="quot2">>>PEG.js is a <a href="pars.htm">pars</a>er generator for <a href="javascript.htm">JavaScript</a> based on the <a href="pars.htm">pars</a>ing expression grammar formalism. It is designed to be <a href="use.htm">use</a>d either from your <a href="brows.htm">brows</a>er, from <a href="javascript.htm">JavaScript</a> code, or from a command line <small>(using Rhino <a href="javascript.htm">JavaScript</a> interpreter)</small>.</span><br/>
<br/>
<a class="ext" href="http://inimino.org/~inimino/blog/peg_first_release">inimino.org/~inimino/blog/peg_first_release</a> <span class="quot2">>>I am releasing an MIT-licensed <a href="javascript.htm">JavaScript</a> <a href="pack.htm">pack</a>rat <a href="pars.htm">pars</a>er generator based on <a href="pars.htm">pars</a>er expression grammars or PEGs.</span><br/>
<br/>
<a class="ext" href="http://zaa.ch">zaa.ch</a> and <a class="ext" href="http://zaach.github.com/jison">zaach.github.com/jison</a> <span class="quot2">>>Jison takes a context-<a href="free.htm">free</a> grammar as input and outputs a <a href="javascript.htm">JavaScript</a> <a href="file.htm">file</a> capable of <a href="pars.htm">pars</a>ing the language described by that grammar. You can then <a href="use.htm">use</a> the generated script to <a href="pars.htm">pars</a>e inputs and accept, reject, or perform actions based on the input. If you're familiar with Bison or Yacc, or other clones, you're almost ready to roll.</span><br/>
<br/>
<a class="ext" href="http://quex.sf.net">quex.sf.net</a> <span class="quot2">>>Quex is a tool to generate lexical analyzers. A lexical analyzer is a program that transforms a stream of characters into a stream of 'atomic chunks of meaning'</span><br/>
<br/>
<a class="ext" href="http://fdik.org/pyPEG">fdik.org/pyPEG</a> <span class="quot2">>>pyPEG - a PEG <a href="pars.htm">Pars</a>er-Interpreter in Python</span><br/>
<br/>
<a class="ext" href="http://TreeTop.RubyForge.org">TreeTop.RubyForge.org</a> <span class="quot2">>>Treetop is a language for describing languages. Combining the elegance of Ruby with cutting-edge <a href="pars.htm">pars</a>ing expression grammars, it helps you analyze syntax with revolutionarily ease.</span><br/>
<br/>
<a class="ext" href="http://Lemke-IT.com">Lemke-IT.com</a><br/>
<br/>
<a class="ext" href="http://Lists.GNU.org/archive/html/gnu-emacs-sources/2008-11/msg00003.html">Lists.GNU.org/archive/html/gnu-emacs-sources/2008-11/msg00003.html</a> <span class="quot2">>>peg.el --- <a href="pars.htm">Pars</a>ing Expression Grammars in <a href="emacs.htm">Emacs</a> Lisp</span><br/>
<br/>
<br/>
<br/>
<span class="h2">==Re<a href="pars.htm">pars</a>e Points</span><br/>
<a class="ext" href="file:///\\stc-file\software\Microsoft\2003 Resource Kit">"\\stc-file\software\Microsoft\2003 Resource Kit"</a><br/>
<br/>
<br/>
<br/>
<a class="ext" href="http://PCGuide.com/ref/hdd/file/ntfs/filesReparse-c.html">PCGuide.com/ref/hdd/file/ntfs/filesReparse-c.html</a><br/>
<span class="quot">"'<br/>
In addition to allowing re<a href="pars.htm">pars</a>e points to implement many types of custom capabilities, Microsoft itself <a href="use.htm">use</a>s them to implement several features within Windows 2000 itself, including the following:<br/>
<br/>
&nbsp;&nbsp;&nbsp; * Symbolic Links: Symbolic linking allows you to create a pointer from one area of the directory structure to the actual location of the <a href="file.htm">file</a> elsewhere in the structure. NTFS does not implement "true" symbolic <a href="file.htm">file</a> linking as exists within UNIX <a href="file.htm">file</a> systems, but the functionality can be simulated by using re<a href="pars.htm">pars</a>e points. In essence, a symbolic link is a re<a href="pars.htm">pars</a>e point that redirect access from one <a href="file.htm">file</a> to another <a href="file.htm">file</a>.<br/>
&nbsp;&nbsp;&nbsp; * Junction Points: A junction point is similar to a symbolic link, but instead of redirecting access from one <a href="file.htm">file</a> to another, it redirects access from one directory to another.<br/>
&nbsp;&nbsp;&nbsp; * Volume <a href="mount.htm">Mount</a> Points: A volume <a href="mount.htm">mount</a> point is like a symbolic link or junction point, but taken to the next level: it is <a href="use.htm">use</a>d to create dynamic access to entire <a href="disk.htm">disk</a> volumes. For example, you can create volume <a href="mount.htm">mount</a> points for removable <a href="hard.htm">hard</a> <a href="disk.htm">disk</a>s or other <a href="stor.htm">stor</a>age media, or even <a href="use.htm">use</a> this feature to allow several <a href="diff.htm">diff</a>e<a href="rent.htm">rent</a> <a href="part.htm">part</a>itions <small>(C:, D:, E: and so on)</small> to appear to the <a href="user.htm">user</a> as if they were all in one logical volume. Windows 2000 can <a href="use.htm">use</a> this capability to break the <a href="trad.htm">trad</a>itional limit of 26 drive letters--using volume <a href="mount.htm">mount</a> points, you can access volumes without the need for a drive letter for the volume. This is <a href="use.htm">use</a>ful for large CD-ROM servers that would otherwise require a separate letter for each <a href="disk.htm">disk</a> <small>(and would also require the <a href="user.htm">user</a> to keep track of all these drive letters!)</small><br/>
&nbsp;&nbsp;&nbsp; * <a href="remot.htm">Remot</a>e <a href="stor.htm">Stor</a>age Server <small>(RSS)</small>: This feature of Windows 2000 <a href="use.htm">use</a>s a set of rules to determine when to move infrequently <a href="use.htm">use</a>d <a href="file.htm">file</a>s on an NTFS volume to archive <a href="stor.htm">stor</a>age <small>(such as CD-RW or tape)</small>. When it moves a <a href="file.htm">file</a> to "offline" or "near offline" <a href="stor.htm">stor</a>age in this manner, RSS leaves behind re<a href="pars.htm">pars</a>e points that contain the instructions necessary to access the archived <a href="file.htm">file</a>s, if they are needed in the future.<br/>
'"</span></p>
<p class='footer'>
 Page generated from <a href=".text/pars">pars</a> by <a href=".code/etym.el">etym</a>.</p>
</body>
</html>
